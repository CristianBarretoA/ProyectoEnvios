@model  ProyectoEnvios.Models.ClienteCS

@{
    ViewBag.Title = "Editar Cliente";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (Session["userID"] == null)
    {
        Response.Redirect("~/Home/Login", false);
    }
}

<h2>Editar Cliente</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdentificacionUsuario)
        @if (TempData["Exito"] != null)
        {
            <div class="text-success">
                <p><strong>Exito: @ViewData["Exito"].ToString()</strong></p>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="text-danger">
                <p><strong>Error: @ViewData["Error"].ToString()</strong></p>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.TipoDocumento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Action("ListarDocumentos", new { id = Model.TipoDocumento })
                @Html.ValidationMessageFor(model => model.TipoDocumento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NombreUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreUsuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApellidoUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApellidoUsuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApellidoUsuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EdadUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EdadUsuario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EdadUsuario, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" value="Editar" class="btn btn-default">
                <span class="glyphicon glyphicon-edit"></span> Editar
                </button>
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("consultarClientes")">
        <span class="glyphicon glyphicon-menu-left"></span>Volver Atras
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
